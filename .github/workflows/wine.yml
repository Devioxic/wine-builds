name: Build Wine
on:
  push:
  pull_request:
permissions:
  contents: read
  pull-requests: read
env:
  WINE_COMMIT: "253fb023"
  STAGING_COMMIT: "05bc4b82"
  EGGROLL_COMMIT: "75a9f080"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: 'Install dependencies'
      run: |
        echo "NAME=proton-10.0-vinegarhq-${{ env.WINE_COMMIT }}" >> $GITHUB_ENV
        echo "PATH=/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" >> $GITHUB_ENV

        sudo apt update -y
        sudo apt install \
          git \
          build-essential \
          curl \
          mingw-w64 \
          libasound2-dev \
          libpulse-dev \
          libdbus-1-dev \
          libfontconfig-dev \
          libfreetype-dev \
          libgl-dev \
          libunwind-dev \
          libx11-dev \
          libxcomposite-dev \
          libxcursor-dev \
          libxfixes-dev \
          libxi-dev \
          libxrandr-dev \
          libxrender-dev \
          libxext-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libosmesa6-dev \
          libudev-dev \
          libvulkan-dev \
          libkrb5-dev \
          libusb-1.0-0-dev \
          libv4l-dev \
          libxkbcommon-dev \
          libxkbregistry-dev \
          libwayland-dev \
          ccache

    - name: 'Configure ccache'
      uses: hendrikmuhs/ccache-action@v1.2

    - name: 'Checkout Repository'
      uses: actions/checkout@v3

    - name: 'Fetch Wine'
      run: |
        mkdir -p wine wine-staging eggroll
        curl -fL https://github.com/ValveSoftware/wine/archive/${{ env.WINE_COMMIT }}.tar.gz |
          tar -xzf - -C wine --strip-components=1
        curl -fL https://github.com/wine-staging/wine-staging/archive/${{ env.STAGING_COMMIT }}.tar.gz |
          tar -xzf - -C wine-staging --strip-components=1
        curl -fL https://github.com/GloriousEggroll/proton-ge-custom/archive/${{ env.EGGROLL_COMMIT }}.tar.gz |
          tar -xzf - -C eggroll --strip-components=1

    - name: 'Apply patches'
      run: |
        echo "INSTALL=${{ github.workspace }}/${{ env.NAME }}" >> $GITHUB_ENV

        wine-staging/staging/patchinstall.py --destdir=wine --all --no-autoconf \
          -W winex11-_NET_ACTIVE_WINDOW \
          -W winex11-WM_WINDOWPOSCHANGING \
          -W user32-alttab-focus \
          -W winex11-MWM_Decorations \
          -W setupapi-DiskSpaceList

         cp eggroll/patches/proton/83-nv_low_latency_wine.patch \
            eggroll/patches/proton/build_failure_prevention-add-nls.patch \
            eggroll/patches/proton/add-envvar-to-gate-media-converter.patch \
            eggroll/patches/proton/0001-ntdll-Downgrade-using-kernel-write-watches-from-MESS.patch \
            eggroll/patches/proton/0001-win32u-add-env-switch-to-disable-wm-decorations.patch \
            .

        cd wine

        for p in ../*.patch; do
          echo $p
          patch -p1 < $p
        done

        autoreconf -f
        ./tools/make_requests

    - name: 'Configure Wine'
      working-directory: wine
      run: |
        mkdir -p ${{ env.INSTALL }}
        ./configure \
          CC='ccache gcc' \
          x86_64_CC='ccache x86_64-w64-mingw32-gcc' \
          CFLAGS='-O3 -pipe -march=x86-64-v2 -mpclmul -mavx' \
          CXXFLAGS='-O3 -pipe -march=x86-64-v2 -mpclmul -mavx' \
          CROSSCFLAGS='-O3 -pipe -march=x86-64-v2 -mpclmul -mavx' \
          --prefix=${{ env.INSTALL }} \
          --enable-win64 \
          --host=x86_64 \
          --build=x86_64 \
          --with-mingw=ccache x86_64-w64-mingw64-gcc \
          --disable-win16 \
          --disable-tests \
          --with-alsa \
          --with-pulse \
          --with-dbus \
          --with-fontconfig \
          --with-freetype \
          --with-opengl \
          --with-wayland \
          --with-x \
          --with-xcomposite \
          --with-xfixes \
          --with-xinput2 \
          --with-xrandr \
          --with-xrender \
          --with-gstreamer \
          --with-vulkan \
          --with-krb5 \
          --with-usb \
          --with-v4l2

    - name: 'Build Wine'
      working-directory: wine
      run: make -j$(($(nproc) + 1))

    - name: 'Install Wine'
      working-directory: wine
      run: make install LDCONFIG=/bin/true UPDATE_DESKTOP_DATABASE=/bin/true

    - name: 'Strip Wine'
      working-directory: ${{ env.INSTALL }}
      run: |
        x86_64-w64-mingw32-strip --strip-unneeded lib/wine/x86_64-windows/*.dll

    - name: Make artifacts
      run: |
        cd $(dirname ${{ env.INSTALL }})
        XZ_OPT=-9 tar -Jcf ${{ env.NAME }}.tar.xz $(basename ${{ env.INSTALL }})

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.NAME }}
        path: ${{ env.NAME }}.tar.xz
